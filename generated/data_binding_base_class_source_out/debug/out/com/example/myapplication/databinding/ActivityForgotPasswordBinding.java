// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityForgotPasswordBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton cancelButton;

  @NonNull
  public final EditText emailid;

  @NonNull
  public final TextView forgotpassword;

  @NonNull
  public final MaterialButton verifybtn;

  private ActivityForgotPasswordBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton cancelButton, @NonNull EditText emailid,
      @NonNull TextView forgotpassword, @NonNull MaterialButton verifybtn) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.emailid = emailid;
    this.forgotpassword = forgotpassword;
    this.verifybtn = verifybtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityForgotPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityForgotPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_forgot_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityForgotPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_button;
      MaterialButton cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.emailid;
      EditText emailid = ViewBindings.findChildViewById(rootView, id);
      if (emailid == null) {
        break missingId;
      }

      id = R.id.forgotpassword;
      TextView forgotpassword = ViewBindings.findChildViewById(rootView, id);
      if (forgotpassword == null) {
        break missingId;
      }

      id = R.id.verifybtn;
      MaterialButton verifybtn = ViewBindings.findChildViewById(rootView, id);
      if (verifybtn == null) {
        break missingId;
      }

      return new ActivityForgotPasswordBinding((RelativeLayout) rootView, cancelButton, emailid,
          forgotpassword, verifybtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
