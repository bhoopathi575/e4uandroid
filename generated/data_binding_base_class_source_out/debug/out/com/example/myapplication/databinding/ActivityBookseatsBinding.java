// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookseatsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView bookseats;

  @NonNull
  public final MaterialButton continuebtn;

  @NonNull
  public final LinearLayout seatssrc;

  @NonNull
  public final LinearLayout seatssrc1;

  @NonNull
  public final LinearLayout seatssrc2;

  @NonNull
  public final LinearLayout seatssrc3;

  @NonNull
  public final LinearLayout seatssrc4;

  @NonNull
  public final LinearLayout seatssrc5;

  @NonNull
  public final LinearLayout seatssrc6;

  @NonNull
  public final LinearLayout seatssrc7;

  @NonNull
  public final LinearLayout seatssrc8;

  private ActivityBookseatsBinding(@NonNull RelativeLayout rootView, @NonNull TextView bookseats,
      @NonNull MaterialButton continuebtn, @NonNull LinearLayout seatssrc,
      @NonNull LinearLayout seatssrc1, @NonNull LinearLayout seatssrc2,
      @NonNull LinearLayout seatssrc3, @NonNull LinearLayout seatssrc4,
      @NonNull LinearLayout seatssrc5, @NonNull LinearLayout seatssrc6,
      @NonNull LinearLayout seatssrc7, @NonNull LinearLayout seatssrc8) {
    this.rootView = rootView;
    this.bookseats = bookseats;
    this.continuebtn = continuebtn;
    this.seatssrc = seatssrc;
    this.seatssrc1 = seatssrc1;
    this.seatssrc2 = seatssrc2;
    this.seatssrc3 = seatssrc3;
    this.seatssrc4 = seatssrc4;
    this.seatssrc5 = seatssrc5;
    this.seatssrc6 = seatssrc6;
    this.seatssrc7 = seatssrc7;
    this.seatssrc8 = seatssrc8;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookseatsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookseatsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bookseats, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookseatsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookseats;
      TextView bookseats = ViewBindings.findChildViewById(rootView, id);
      if (bookseats == null) {
        break missingId;
      }

      id = R.id.continuebtn;
      MaterialButton continuebtn = ViewBindings.findChildViewById(rootView, id);
      if (continuebtn == null) {
        break missingId;
      }

      id = R.id.seatssrc;
      LinearLayout seatssrc = ViewBindings.findChildViewById(rootView, id);
      if (seatssrc == null) {
        break missingId;
      }

      id = R.id.seatssrc1;
      LinearLayout seatssrc1 = ViewBindings.findChildViewById(rootView, id);
      if (seatssrc1 == null) {
        break missingId;
      }

      id = R.id.seatssrc2;
      LinearLayout seatssrc2 = ViewBindings.findChildViewById(rootView, id);
      if (seatssrc2 == null) {
        break missingId;
      }

      id = R.id.seatssrc3;
      LinearLayout seatssrc3 = ViewBindings.findChildViewById(rootView, id);
      if (seatssrc3 == null) {
        break missingId;
      }

      id = R.id.seatssrc4;
      LinearLayout seatssrc4 = ViewBindings.findChildViewById(rootView, id);
      if (seatssrc4 == null) {
        break missingId;
      }

      id = R.id.seatssrc5;
      LinearLayout seatssrc5 = ViewBindings.findChildViewById(rootView, id);
      if (seatssrc5 == null) {
        break missingId;
      }

      id = R.id.seatssrc6;
      LinearLayout seatssrc6 = ViewBindings.findChildViewById(rootView, id);
      if (seatssrc6 == null) {
        break missingId;
      }

      id = R.id.seatssrc7;
      LinearLayout seatssrc7 = ViewBindings.findChildViewById(rootView, id);
      if (seatssrc7 == null) {
        break missingId;
      }

      id = R.id.seatssrc8;
      LinearLayout seatssrc8 = ViewBindings.findChildViewById(rootView, id);
      if (seatssrc8 == null) {
        break missingId;
      }

      return new ActivityBookseatsBinding((RelativeLayout) rootView, bookseats, continuebtn,
          seatssrc, seatssrc1, seatssrc2, seatssrc3, seatssrc4, seatssrc5, seatssrc6, seatssrc7,
          seatssrc8);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
